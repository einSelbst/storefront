/* import { NextPage } from 'next' */
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import Profile from '../components/profile'
import styles from '../styles/Home.module.css'

/* import { log } from 'logger' */
/* import { CounterButton, NewTabLink } from 'ui' */
import { signIn, signOut, useSession } from 'next-auth/react'
import { client, useQuery } from '../lib/wundergraph'

/* import { dehydrate, QueryClient } from '@tanstack/react-query' */

export async function getStaticProps() {
  const res = await client.query({
    /* operationName: 'AllAutos', */
    operationName: 'AllBusinesses',
  })
  /* const companies = res!.data!.faunaDB_allAutos.data */
  console.log(res.data)
  const companies = res!.data!.faunaDB_allBusinesses.data

  return {
    props: {
      companies,
    },
  }
}
/*
* export async function getStaticProps2() {
*   const queryClient = new QueryClient()
*
*   // const res = await client.query({
*   // operationName: 'AllAutos',
*   // })
* await queryClient.prefetchQuery({
  *     queryKey: ['posts', 10],
  *     queryFn: client.query({
    *       operationName: 'AllAutos',
    *     }),
*   })
  *
*   // const posts = await res.json()
*   // const companies = await queryClient.json()
*   // const companies = res!.data!.faunaDB_allAutos.data
*
*   // By returning { props: { posts } }, the Blog component
*   // will receive `posts` as a prop at build time
*   return {
  *     props: {
*       // companies: companies,
*       companies: dehydrate(queryClient),
*     },
*   }
* }
*  * /
/* function Home() { */
const Company = ({ companies }: any) => {
  /* log('Hey! This is Company.') */
  const { data: session } = useSession()
  /* const autos = useQuery({ operationName: 'AllAutos' }) */
  const autos = useQuery({ operationName: 'AllBusinesses' })
  /* const stores = useQuery({ operationName: 'AllStores' }) */
  /* const dragons = useQuery({ operationName: 'Dragons' }) */
  /* const refresh = () => { stores.mutate() } */
  console.log(companies)
  /* const { data, isLoading, error } = useQuery({ operationName: 'Countries', input: { code: 'US',    },  }); */

  return (
    <div className={styles.container}>
      <Head>
        <title>Store | Kitchen Sink</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to{' '}
          <a href='https://github.com/zitadel/zitadel-examples/tree/main/nextjs'>
            Next.js with ZITADEL! and WunderGraph and Fauna
          </a>
        </h1>

        {/* <div>{JSON.stringify(companies)}</div> */}
        <h2>Here</h2>
        <ul>
          {companies.map((company: any) => (
            <li key="{company.name}">
              <Link
                href={{
                  pathname: '/company/[business]',
                  query: { business: company.name },
                }}>
                {company.display}
              </Link>
            </li>
          ))}
        </ul>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>
        {!session && (
          <>
            Not signed in <br />
            <button
              onClick={() =>
                signIn('zitadel', {
                  callbackUrl: process.env.ZITADEL_CALLBACK_URL!,
                })
              }>
              Sign in
            </button>
          </>
        )}
        {session && (
          <>
            Signed in as {session.user!.email!} <br />
            <button onClick={() => signOut()}>Sign out</button>
          </>
        )}

        <Profile />

        {/* <CounterButton /> */}

        <div className='mx-auto flex max-w-sm flex-col items-center'>
          <p className='mt-3 mb-8 text-center text-black/80'>
            This is the result of your{' '}
            <code className='font-mono font-medium text-amber-500 font-bold'>
              AllStores
            </code>{' '}
            operation.
          </p>
          <code className='p-3'>{JSON.stringify(autos, null, 2)}</code>
        </div>

        <p className='description'>
          Built With{' '}
          {/* <NewTabLink href='https://turbo.build/repo'>Turborepo</NewTabLink> +{' '} */}
          {/* <NewTabLink href='https://nextjs.org/'>Next.js</NewTabLink> */}
        </p>
      </main>

      <footer className={styles.footer}>
        <a href='https://zitadel.ch' target='_blank' rel='noopener noreferrer'>
          Powered by{' '}
          <span className={styles.logo}>
            <Image
              src='/zitadel-logo-dark.svg'
              alt='Zitadel Logo'
              height={40}
              width={147.5}
            />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Company
